<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easy.zadmin.mapper.OrderMapper">


    <select id="queryOrder" resultType="com.easy.zadmin.pojo.entity.Order" parameterType="java.lang.String">
        select *
        from `order` where order_id=#{orderId};
    </select>


<!--   分页带条件查询 -->
    <select id="selectPageVo" resultType="com.easy.zadmin.pojo.entity.Order">
        select * from `order` where 1=1 and del_flag=0

        <if test="null != order.orderStatus and '' != order.orderStatus">
            and order_status = #{order.orderStatus}
        </if>

        <if test="null != order.orderId and '' != order.orderId">
            and order_id = #{order.orderId}
        </if>
        <if test="null != order.teachName and '' != order.teachName">
<!--            <bind name="order.teachName" value="'%'+order.teachName+'%'"/>-->
            and teach_name like concat('%', #{order.teachName}, '%')
        </if>
        <if test="null != order.customerName and '' != order.customerName">
<!--            <bind name="order.customerName" value="'%'+order.customerName+'%'"/>-->
            and customer_name like   concat('%', #{order.customerName}, '%')
        </if>
        <if test="null != order.stuId and '' != order.stuId">
            and stu_id = #{order.stuId}
        </if>

<!--   上课时间  TODO      <if test="order.courseTime != null">-->
<!--            <![CDATA[ and DATE_FORMAT(course_time, '%Y-%m-%d') >= #{0} ]]>-->
<!--        </if>-->
        <if test="order.endTime!= null ">
           and  course_time <![CDATA[ <= ]]> #{order.endTime}
        </if>
        <if test="order.startTime!= null">
            and  course_time <![CDATA[ >= ]]> #{order.startTime}
        </if>

        order by create_time desc

    </select>
    <insert id="createOrder"  parameterType="com.easy.zadmin.pojo.entity.Order">
        insert into `order`
        set order_id=#{order.orderId},
            order_status=#{order.orderStatus},
            order_total=#{order.orderTotal},
            course_time=#{order.courseTime},
            create_time=NOW(),
            course_hours=#{order.courseHours},
            price=#{order.price},
            teach_name=#{order.teachName},
            customer_name=#{order.customerName},
            del_flag=#{order.delFlag},
            course_type=#{order.courseType},
            stu_id=#{order.stuId},
            user_id=#{order.userId}
    </insert>

<!--编辑订单-->
    <update id="editOrder" parameterType="com.easy.zadmin.pojo.entity.Order">
        update `order` set teach_name=#{order.teachName},
                           course_type=#{order.courseType},
                           course_time=#{order.courseTime},
                           course_hours=#{order.courserHours},
                           price=#{order.price},
                           order_total=#{order.orderTotal},
                           user_id=#{order.userId}
                           where order_id=#{order.orderId} and del_flag=0
    </update>

<!--    批量更新-->
    <!-- 批量更新第二种方法，针对单个字段进行批量更新 -->
    <update id="updateBatch" parameterType="java.util.List">
        UPDATE `order`
        SET order_status = 2
        WHERE `order`.order_id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item.orderId}
        </foreach>
    </update>

    <update id="delOrder" parameterType="java.util.List">
        UPDATE `order`
        SET del_flag = 1
        WHERE `order`.order_id IN
        <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
            #{item.orderId}
        </foreach>
    </update>

<!--  批量更新完成之后，对批量更新的客户余额进行减少动作  -->
    <update id="updateBatchByEmailToCustomer" parameterType="java.util.List">
        <foreach collection="list" item="item" separator=";">
            update cust_student set used_hours=used_hours+ #{item.courseHours}, surplus_amount =surplus_amount-#{item.orderTotal},used_amount=used_amount+#{item.orderTotal} where id = #{item.stuId}
        </foreach>
    </update>



</mapper>